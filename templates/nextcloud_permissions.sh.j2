#!/bin/bash

# generated by ansible

htuser='nginx'
htgroup='nginx'
rootuser='root'

printf "Creating possible missing Directories\n"
mkdir -p {{ nextcloud_data_root }}
mkdir -p {{ nextcloud_web_root }}/updater

printf "chmod Files and Directories\n"
find {{ nextcloud_web_root }}/ -type f -print0 | xargs -0 chmod 0640
find {{ nextcloud_web_root }}/ -type d -print0 | xargs -0 chmod 0750

printf "chown Directories\n"
chown -R ${rootuser}:${htgroup} {{ nextcloud_web_root }}/
chown -R ${htuser}:${htgroup} {{ nextcloud_web_root }}/apps/
chown -R ${htuser}:${htgroup} {{ nextcloud_web_root }}/config/
chown -R ${htuser}:${htgroup} {{ nextcloud_data_root }}
chown -R ${htuser}:${htgroup} {{ nextcloud_web_root }}/themes/
chown -R ${htuser}:${htgroup} {{ nextcloud_web_root }}/updater/

chmod +x {{ nextcloud_web_root }}/occ

printf "chmod/chown .htaccess\n"
if [ -f {{ nextcloud_web_root }}/.htaccess ]
 then
  chmod 0644 {{ nextcloud_web_root }}/.htaccess
  chown ${rootuser}:${htgroup} {{ nextcloud_web_root }}/.htaccess
fi
if [ -f {{ nextcloud_data_root }}/.htaccess ]
 then
  chmod 0644 {{ nextcloud_data_root }}/.htaccess
  chown ${rootuser}:${htgroup} {{ nextcloud_data_root }}/.htaccess
fi

printf "selinux"
semanage fcontext -a -t httpd_sys_rw_content_t '{{ nextcloud_data_root }}(/.*)?'
semanage fcontext -a -t httpd_sys_rw_content_t '{{ nextcloud_web_root }}/config(/.*)?'
semanage fcontext -a -t httpd_sys_rw_content_t '{{ nextcloud_web_root }}/apps(/.*)?'
semanage fcontext -a -t httpd_sys_rw_content_t '{{ nextcloud_web_root }}/.htaccess'
semanage fcontext -a -t httpd_sys_rw_content_t '{{ nextcloud_web_root }}/.user.ini'

restorecon -Rv '{{ nextcloud_data_root }}'
restorecon -Rv '{{ nextcloud_web_root }}'

setsebool -P httpd_can_network_connect 1 # for redis
